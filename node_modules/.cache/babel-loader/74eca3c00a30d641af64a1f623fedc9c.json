{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Udemy\\\\custom-hooks\\\\onwards-to-a-more-realistic-example\\\\src\\\\components\\\\NewTask\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport classes from \"./TaskForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = props => {\n  _s();\n\n  useEffect(() => {\n    taskInputRef.current.focus();\n  }, []);\n  const taskInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    let enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: taskInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: props.loading ? \"Sending...\" : \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskForm, \"bB2h9lq4nymEUUPwvWzU4DMI7CU=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["C:/React Udemy/custom-hooks/onwards-to-a-more-realistic-example/src/components/NewTask/TaskForm.js"],"names":["useRef","useEffect","classes","TaskForm","props","taskInputRef","current","focus","submitHandler","event","preventDefault","enteredValue","value","trim","length","onEnterTask","form","loading"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1BH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACC,OAAb,CAAqBC,KAArB;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMF,YAAY,GAAGL,MAAM,EAA3B;;AACA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,YAAY,GAAGN,YAAY,CAACC,OAAb,CAAqBM,KAAxC;;AACA,QAAID,YAAY,CAACE,IAAb,GAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAClCV,MAAAA,KAAK,CAACW,WAAN,CAAkBJ,YAAlB;AACD;AACF,GAND;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAET,OAAO,CAACc,IAAzB;AAA+B,IAAA,QAAQ,EAAER,aAAzC;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAASD,KAAK,CAACa,OAAN,GAAgB,YAAhB,GAA+B;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnBD;;GAAMd,Q;;KAAAA,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport classes from \"./TaskForm.module.css\";\n\nconst TaskForm = (props) => {\n  useEffect(() => {\n    taskInputRef.current.focus();\n  }, []);\n  const taskInputRef = useRef();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    let enteredValue = taskInputRef.current.value;\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type=\"text\" ref={taskInputRef} />\n      <button>{props.loading ? \"Sending...\" : \"Add Task\"}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}